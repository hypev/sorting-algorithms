var vm=new Vue({el:"#app",data:{algorithms:[{name:"Merge Sort",func:function(){let r=function(t,s,a,i){if(t<s){let e=Math.floor((t+s)/2);r(t,e,a,i),r(e+1,s,a,i),function(r,t,s,a,i){let e=t-r+1,h=s-t,n=[],o=[];for(let t=0;t<e;t++)n.push(i.arr[r+t]);for(let r=0;r<h;r++)o.push(i.arr[t+1+r]);let l=0,u=0,c=r;for(;l<e&&u<h;)a.push({ids:[r+l,u+t+1],vals:[n[l],o[u]],bgs:["compare","compare"]}),a.push({ids:[r+l,u+t+1],vals:[n[l],o[u]],bgs:["static","static"]}),i.comparison++,n[l]<=o[u]?(a.push({ids:[r+l,c],vals:[n[l],i.arr[c]],bgs:["swap","swap"]}),i.arr[c]=n[l],a.push({ids:[r+l,c],vals:[n[l],i.arr[c]],bgs:["static","static"]}),l++):(a.push({ids:[u+t+1,c],vals:[o[u],i.arr[c]],bgs:["swap","swap"]}),i.arr[c]=o[u],a.push({ids:[u+t+1,c],vals:[o[u],i.arr[c]],bgs:["static","static"]}),u++),c++;for(;l<e;)a.push({ids:[c,l+r],vals:[i.arr[c],n[l]],bgs:["swap","swap"]}),i.arr[c]=n[l],a.push({ids:[c,l+r],vals:[i.arr[c],n[l]],bgs:["static","static"]}),l++,c++;for(;u<h;)a.push({ids:[c,u+t+1],vals:[i.arr[c],o[u]],bgs:["swap","swap"]}),i.arr[c]=o[u],a.push({ids:[c,u+t+1],vals:[i.arr[c],o[u]],bgs:["static","static"]}),u++,c++}(t,e,s,a,i)}},t=[];const s=Date.now();r(0,this.arr.length-1,t,this),this.time=Date.now()-s;for(let r=0;r<this.arr.length;r++)t.push({ids:[this.arr.length-r-1],vals:[this.arr[this.arr.length-r-1]],bgs:["ready"]});return t}},{name:"Quick Sort",func:function(){let r=function(s,a,i,e){if(s<a){let h=t(s,a,i,e);r(s,h-1,i,e),r(h+1,a,i,e)}},t=function(r,t,s,a){let i=a.arr[t],e=r-1;s.push({ids:[t],vals:[i],bgs:["compare"]});for(let h=r;h<=t-1;h++){if(a.comparison++,s.push({ids:[h],vals:[a.arr[h]],bgs:["compare"]}),a.arr[h]<i){e++;let r=a.arr[h];a.arr[h]=a.arr[e],a.arr[e]=r,s.push({ids:[h,e],vals:[a.arr[h],a.arr[e]],bgs:["swap","swap"]}),s.push({ids:[h,e],vals:[a.arr[h],a.arr[e]],bgs:["static","static"]})}s.push({ids:[h],vals:[a.arr[h]],bgs:["static"]})}s.push({ids:[e+1,t],vals:[a.arr[e+1],a.arr[t]],bgs:["swap","swap"]});let h=a.arr[e+1];return a.arr[e+1]=a.arr[t],a.arr[t]=h,s.push({ids:[e+1,t],vals:[a.arr[e+1],a.arr[t]],bgs:["static","static"]}),e+1},s=[];const a=Date.now();r(0,this.arr.length-1,s,this),this.time=Date.now()-a;for(let r=0;r<this.arr.length;r++)s.push({ids:[this.arr.length-r-1],vals:[this.arr[this.arr.length-r-1]],bgs:["ready"]});return s}},{name:"Heap Sort",func:function(){let r=function(t,s,a,i){let e=s,h=2*s+1,n=2*s+2;if(a.push({ids:[h,e],vals:[i.arr[h],i.arr[e]],bgs:["compare","compare"]}),i.comparison++,h<t&&i.arr[h]>i.arr[e]&&(e=h),a.push({ids:[h,e],vals:[i.arr[h],i.arr[e]],bgs:["static","static"]}),a.push({ids:[n,e],vals:[i.arr[n],i.arr[e]],bgs:["compare","compare"]}),i.comparison++,n<t&&i.arr[n]>i.arr[e]&&(e=n),a.push({ids:[n,e],vals:[i.arr[n],i.arr[e]],bgs:["static","static"]}),e!=s){a.push({ids:[s,e],vals:[i.arr[s],i.arr[e]],bgs:["swap","swap"]});let h=i.arr[s];i.arr[s]=i.arr[e],i.arr[e]=h,a.push({ids:[s,e],vals:[i.arr[s],i.arr[e]],bgs:["static","static"]}),r(t,e,a,i)}},t=[];const s=Date.now();!function(t,s,a){for(let i=Math.floor(t/2)-1;i>=0;i--)r(t,i,s,a);for(let i=t-1;i>0;i--){s.push({ids:[0,i],vals:[a.arr[0],a.arr[i]],bgs:["swap","swap"]});let t=a.arr[0];a.arr[0]=a.arr[i],a.arr[i]=t,s.push({ids:[0,i],vals:[a.arr[0],a.arr[i]],bgs:["static","static"]}),r(i,0,s,a)}}(this.arr.length,t,this),this.time=Date.now()-s;for(let r=0;r<this.arr.length;r++)t.push({ids:[this.arr.length-r-1],vals:[this.arr[this.arr.length-r-1]],bgs:["ready"]});return t}},{name:"Bubble Sort",func:function(){let r=[];const t=Date.now();let s,a=this.arr.length;for(var i=0;i<a;i++){s=!1;for(var e=0;e<a-i-1;e++){if(this.comparison++,r.push({ids:[e,e+1],vals:[this.arr[e],this.arr[e+1]],bgs:["compare","compare"]}),this.arr[e]>this.arr[e+1]){r.push({ids:[e,e+1],vals:[this.arr[e],this.arr[e+1]],bgs:["swap","swap"]});var h=this.arr[e];this.arr[e]=this.arr[e+1],this.arr[e+1]=h,s=!0}r.push({ids:[e,e+1],vals:[this.arr[e],this.arr[e+1]],bgs:["static","static"]})}if(r.push({ids:[a-i-1],vals:[this.arr[a-i-1]],bgs:["ready"]}),!s)break}for(;i<a;i++)r.push({ids:[a-i-1],vals:[this.arr[a-i-1]],bgs:["ready"]});return this.time=Date.now()-t,r}},{name:"Fastest",func:function(){}}],currentAlgorithmName:"",arr:[],state:[],size:5,comparison:0,time:0,paused:!1,reverseClicked:!1,sorted:!1},computed:{blocked:function(){return""===this.currentAlgorithmName},currentAlgorithmFunc:function(){return"Fastest"==this.currentAlgorithmName&&(this.currentAlgorithmName="Quick Sort",this.reverseClicked&&(this.currentAlgorithmName="Merge Sort"),this.sorted&&(this.currentAlgorithmName="Bubble Sort")),this.algorithms.find((r,t,s)=>this.currentAlgorithmName===r.name).func},elemWidth:function(){return 70/this.size+"%"},textVisible:function(){return this.size<=25},maxVal:function(){return Math.max(...this.arr)},animSpeed:function(){return 100/this.size*(100/this.size)}},methods:{getRandomInt:function(r,t){return r=Math.ceil(r),t=Math.floor(t),Math.floor(Math.random()*(t-r+1))+r},generateArr:function(){this.sorted=!1,this.reverseClicked=!1,this.arr=[];for(let r=0;r<this.size;r++)this.arr.push(this.getRandomInt(1,4*this.size))},reverseSorted:function(){this.reverseClicked=!0,this.sorted=!1,this.arr.sort((r,t)=>r-t).reverse()},stateInit:function(){this.state=[];for(let r=0;r<this.size;r++)this.state.push({id:r,val:this.arr[r],bg:"static"})},shuffle:function(){this.sorted=!1,this.reverseClicked=!1,this.arr.sort(()=>Math.random()-.5)},elemHeight:function(r){return r/this.maxVal*100+"%"},sort:function(){this.animation=[],this.time=0,this.comparison=0,this.paused=!0,this.stateInit();let r=this.currentAlgorithmFunc();this.sorted=!0,this.animate(r),setTimeout(()=>{this.paused=!1},r.length*this.animSpeed)},animate:function(r){for(let t=0;t<r.length;t++)setTimeout(()=>{for(let s=0;s<r[t].ids.length;s++)this.state[r[t].ids[s]].val=r[t].vals[s],this.state[r[t].ids[s]].bg=r[t].bgs[s]},this.animSpeed*t)}},created:function(){this.generateArr()},watch:{size:function(r,t){this.size=+this.size,this.generateArr()},arr:function(r,t){this.stateInit()}}});